{"ast":null,"code":"import { CLEAR_BOARD, GET_BOARDS, GET_BOARD, ADD_BOARD, BOARD_ERROR, RENAME_BOARD, GET_LIST, ADD_LIST, RENAME_LIST, ARCHIVE_LIST, GET_CARD, ADD_CARD, EDIT_CARD, MOVE_CARD, ARCHIVE_CARD, DELETE_CARD, GET_ACTIVITY, ADD_MEMBER, MOVE_LIST, ADD_CARD_MEMBER, ADD_CHECKLIST_ITEM, EDIT_CHECKLIST_ITEM, COMPLETE_CHECKLIST_ITEM, DELETE_CHECKLIST_ITEM } from '../actions/types';\nconst initialState = {\n  boards: [],\n  board: null,\n  dashboardLoading: true,\n  error: {}\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CLEAR_BOARD:\n      return { ...state,\n        board: null\n      };\n\n    case GET_BOARDS:\n      return { ...state,\n        boards: payload,\n        dashboardLoading: false\n      };\n\n    case RENAME_BOARD:\n    case GET_BOARD:\n      return { ...state,\n        board: { ...state.board,\n          ...payload\n        }\n      };\n\n    case ADD_BOARD:\n      return { ...state,\n        boards: [payload, ...state.boards]\n      };\n\n    case BOARD_ERROR:\n      return { ...state,\n        error: payload\n      };\n\n    case GET_LIST:\n      return { ...state,\n        board: { ...state.board,\n          listObjects: [...state.board.listObjects, payload]\n        }\n      };\n\n    case ADD_LIST:\n      return { ...state,\n        board: { ...state.board,\n          lists: [...state.board.lists, payload._id]\n        }\n      };\n\n    case ARCHIVE_LIST:\n    case RENAME_LIST:\n      return { ...state,\n        board: { ...state.board,\n          listObjects: state.board.listObjects.map(list => list._id === payload._id ? payload : list)\n        }\n      };\n\n    case GET_CARD:\n      return { ...state,\n        board: { ...state.board,\n          cardObjects: [...state.board.cardObjects, payload]\n        }\n      };\n\n    case ADD_CARD:\n      return { ...state,\n        board: { ...state.board,\n          listObjects: state.board.listObjects.map(list => list._id === payload.listId ? { ...list,\n            cards: [...list.cards, payload.cardId]\n          } : list)\n        }\n      };\n\n    case ADD_CHECKLIST_ITEM:\n    case EDIT_CHECKLIST_ITEM:\n    case COMPLETE_CHECKLIST_ITEM:\n    case DELETE_CHECKLIST_ITEM:\n    case ARCHIVE_CARD:\n    case ADD_CARD_MEMBER:\n    case EDIT_CARD:\n      return { ...state,\n        board: { ...state.board,\n          cardObjects: state.board.cardObjects.map(card => card._id === payload._id ? payload : card)\n        }\n      };\n\n    case MOVE_CARD:\n      return { ...state,\n        board: { ...state.board,\n          listObjects: state.board.listObjects.map(list => list._id === payload.from._id ? payload.from : list._id === payload.to._id ? payload.to : list),\n          cardObjects: state.board.cardObjects.filter(card => card._id !== payload.cardId || payload.to._id === payload.from._id)\n        }\n      };\n\n    case DELETE_CARD:\n      return { ...state,\n        board: { ...state.board,\n          cardObjects: state.board.cardObjects.filter(card => card._id !== payload),\n          listObjects: state.board.listObjects.map(list => list.cards.includes(payload) ? { ...list,\n            cards: list.cards.filter(card => card !== payload)\n          } : list)\n        }\n      };\n\n    case GET_ACTIVITY:\n      return { ...state,\n        board: { ...state.board,\n          activity: payload\n        }\n      };\n\n    case ADD_MEMBER:\n      return { ...state,\n        board: { ...state.board,\n          members: payload\n        }\n      };\n\n    case MOVE_LIST:\n      return { ...state,\n        board: { ...state.board,\n          lists: payload\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["E:/Convergen/Convergen/client/src/reducers/board.js"],"names":["CLEAR_BOARD","GET_BOARDS","GET_BOARD","ADD_BOARD","BOARD_ERROR","RENAME_BOARD","GET_LIST","ADD_LIST","RENAME_LIST","ARCHIVE_LIST","GET_CARD","ADD_CARD","EDIT_CARD","MOVE_CARD","ARCHIVE_CARD","DELETE_CARD","GET_ACTIVITY","ADD_MEMBER","MOVE_LIST","ADD_CARD_MEMBER","ADD_CHECKLIST_ITEM","EDIT_CHECKLIST_ITEM","COMPLETE_CHECKLIST_ITEM","DELETE_CHECKLIST_ITEM","initialState","boards","board","dashboardLoading","error","state","action","type","payload","listObjects","lists","_id","map","list","cardObjects","listId","cards","cardId","card","from","to","filter","includes","activity","members"],"mappings":"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","sourcesContent":["import {\n  CLEAR_BOARD,\n  GET_BOARDS,\n  GET_BOARD,\n  ADD_BOARD,\n  BOARD_ERROR,\n  RENAME_BOARD,\n  GET_LIST,\n  ADD_LIST,\n  RENAME_LIST,\n  ARCHIVE_LIST,\n  GET_CARD,\n  ADD_CARD,\n  EDIT_CARD,\n  MOVE_CARD,\n  ARCHIVE_CARD,\n  DELETE_CARD,\n  GET_ACTIVITY,\n  ADD_MEMBER,\n  MOVE_LIST,\n  ADD_CARD_MEMBER,\n  ADD_CHECKLIST_ITEM,\n  EDIT_CHECKLIST_ITEM,\n  COMPLETE_CHECKLIST_ITEM,\n  DELETE_CHECKLIST_ITEM,\n} from '../actions/types';\n\nconst initialState = {\n  boards: [],\n  board: null,\n  dashboardLoading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CLEAR_BOARD:\n      return {\n        ...state,\n        board: null,\n      };\n    case GET_BOARDS:\n      return {\n        ...state,\n        boards: payload,\n        dashboardLoading: false,\n      };\n    case RENAME_BOARD:\n    case GET_BOARD:\n      return {\n        ...state,\n        board: { ...state.board, ...payload },\n      };\n    case ADD_BOARD:\n      return {\n        ...state,\n        boards: [payload, ...state.boards],\n      };\n    case BOARD_ERROR:\n      return {\n        ...state,\n        error: payload,\n      };\n    case GET_LIST:\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          listObjects: [...state.board.listObjects, payload],\n        },\n      };\n    case ADD_LIST:\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          lists: [...state.board.lists, payload._id],\n        },\n      };\n    case ARCHIVE_LIST:\n    case RENAME_LIST:\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          listObjects: state.board.listObjects.map((list) =>\n            list._id === payload._id ? payload : list\n          ),\n        },\n      };\n    case GET_CARD:\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          cardObjects: [...state.board.cardObjects, payload],\n        },\n      };\n    case ADD_CARD:\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          listObjects: state.board.listObjects.map((list) =>\n            list._id === payload.listId\n              ? { ...list, cards: [...list.cards, payload.cardId] }\n              : list\n          ),\n        },\n      };\n    case ADD_CHECKLIST_ITEM:\n    case EDIT_CHECKLIST_ITEM:\n    case COMPLETE_CHECKLIST_ITEM:\n    case DELETE_CHECKLIST_ITEM:\n    case ARCHIVE_CARD:\n    case ADD_CARD_MEMBER:\n    case EDIT_CARD:\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          cardObjects: state.board.cardObjects.map((card) =>\n            card._id === payload._id ? payload : card\n          ),\n        },\n      };\n    case MOVE_CARD:\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          listObjects: state.board.listObjects.map((list) =>\n            list._id === payload.from._id\n              ? payload.from\n              : list._id === payload.to._id\n              ? payload.to\n              : list\n          ),\n          cardObjects: state.board.cardObjects.filter(\n            (card) => card._id !== payload.cardId || payload.to._id === payload.from._id\n          ),\n        },\n      };\n    case DELETE_CARD:\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          cardObjects: state.board.cardObjects.filter((card) => card._id !== payload),\n          listObjects: state.board.listObjects.map((list) =>\n            list.cards.includes(payload)\n              ? { ...list, cards: list.cards.filter((card) => card !== payload) }\n              : list\n          ),\n        },\n      };\n    case GET_ACTIVITY:\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          activity: payload,\n        },\n      };\n    case ADD_MEMBER:\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          members: payload,\n        },\n      };\n    case MOVE_LIST:\n      return {\n        ...state,\n        board: {\n          ...state.board,\n          lists: payload,\n        },\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}