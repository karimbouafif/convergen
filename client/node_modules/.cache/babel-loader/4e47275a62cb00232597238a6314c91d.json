{"ast":null,"code":"var _jsxFileName = \"E:\\\\Convergen\\\\Convergen\\\\client\\\\src\\\\components\\\\list\\\\ListTitle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { renameList } from '../../actions/board';\nimport { TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListTitle = _ref => {\n  _s();\n\n  let {\n    list\n  } = _ref;\n  const [editing, setEditing] = useState(false);\n  const [title, setTitle] = useState(list.title);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setTitle(list.title);\n  }, [list.title]);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    dispatch(renameList(list._id, {\n      title\n    }));\n    setEditing(false);\n  };\n\n  return !editing ? /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"list-title\",\n    onClick: () => setEditing(true),\n    children: list.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => onSubmit(e),\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      required: true,\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListTitle, \"+3SfqHyQuSt5gChuRlaJm/OnfuI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ListTitle;\nListTitle.propTypes = {\n  list: PropTypes.object.isRequired\n};\nexport default ListTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTitle\");","map":{"version":3,"sources":["E:/Convergen/Convergen/client/src/components/list/ListTitle.js"],"names":["React","useState","useEffect","useDispatch","PropTypes","renameList","TextField","ListTitle","list","editing","setEditing","title","setTitle","dispatch","onSubmit","e","preventDefault","_id","target","value","propTypes","object","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,QAA0B,mBAA1B;;;AAEA,MAAMC,SAAS,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACO,IAAI,CAACG,KAAN,CAAlC;AACA,QAAME,QAAQ,GAAGV,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACJ,IAAI,CAACG,KAAN,CAAR;AACD,GAFQ,EAEN,CAACH,IAAI,CAACG,KAAN,CAFM,CAAT;;AAIA,QAAMG,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAACR,UAAU,CAACG,IAAI,CAACS,GAAN,EAAW;AAAEN,MAAAA;AAAF,KAAX,CAAX,CAAR;AACAD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAJD;;AAMA,SAAO,CAACD,OAAD,gBACL;AAAI,IAAA,SAAS,EAAC,YAAd;AAA2B,IAAA,OAAO,EAAE,MAAMC,UAAU,CAAC,IAAD,CAApD;AAAA,cACGF,IAAI,CAACG;AADR;AAAA;AAAA;AAAA;AAAA,UADK,gBAKL;AAAM,IAAA,QAAQ,EAAGI,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAA/B;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,MAAnB;AAAoB,MAAA,KAAK,EAAEJ,KAA3B;AAAkC,MAAA,QAAQ,EAAGI,CAAD,IAAOH,QAAQ,CAACG,CAAC,CAACG,MAAF,CAASC,KAAV;AAA3D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UALF;AASD,CAxBD;;GAAMZ,S;UAGaJ,W;;;KAHbI,S;AA0BNA,SAAS,CAACa,SAAV,GAAsB;AACpBZ,EAAAA,IAAI,EAAEJ,SAAS,CAACiB,MAAV,CAAiBC;AADH,CAAtB;AAIA,eAAef,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { renameList } from '../../actions/board';\nimport { TextField } from '@material-ui/core';\n\nconst ListTitle = ({ list }) => {\n  const [editing, setEditing] = useState(false);\n  const [title, setTitle] = useState(list.title);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setTitle(list.title);\n  }, [list.title]);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    dispatch(renameList(list._id, { title }));\n    setEditing(false);\n  };\n\n  return !editing ? (\n    <h3 className='list-title' onClick={() => setEditing(true)}>\n      {list.title}\n    </h3>\n  ) : (\n    <form onSubmit={(e) => onSubmit(e)}>\n      <TextField required value={title} onChange={(e) => setTitle(e.target.value)} />\n    </form>\n  );\n};\n\nListTitle.propTypes = {\n  list: PropTypes.object.isRequired,\n};\n\nexport default ListTitle;\n"]},"metadata":{},"sourceType":"module"}