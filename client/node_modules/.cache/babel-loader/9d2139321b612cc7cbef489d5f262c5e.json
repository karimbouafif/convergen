{"ast":null,"code":"var _jsxFileName = \"E:\\\\Convergen\\\\Convergen\\\\client\\\\src\\\\components\\\\board\\\\ArchivedLists.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { archiveList } from '../../actions/board';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ArchivedLists = () => {\n  _s();\n\n  const listObjects = useSelector(state => state.board.board.listObjects);\n  const dispatch = useDispatch();\n\n  const onSubmit = async listId => {\n    dispatch(archiveList(listId, false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      children: listObjects.filter(list => list.archived).map((list, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: list.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => onSubmit(list._id),\n          children: \"Send to Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ArchivedLists, \"jJvy7lyOFmH8WJwO5sYl0V8P25U=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ArchivedLists;\nexport default ArchivedLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArchivedLists\");","map":{"version":3,"sources":["E:/Convergen/Convergen/client/src/components/board/ArchivedLists.js"],"names":["React","useSelector","useDispatch","archiveList","List","Button","ListItem","ListItemText","ArchivedLists","listObjects","state","board","dispatch","onSubmit","listId","filter","list","archived","map","index","title","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,WAAW,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYA,KAAZ,CAAkBF,WAA9B,CAA/B;AACA,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,QAAMW,QAAQ,GAAG,MAAOC,MAAP,IAAkB;AACjCF,IAAAA,QAAQ,CAACT,WAAW,CAACW,MAAD,EAAS,KAAT,CAAZ,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAA,gBACGL,WAAW,CACTM,MADF,CACUC,IAAD,IAAUA,IAAI,CAACC,QADxB,EAEEC,GAFF,CAEM,CAACF,IAAD,EAAOG,KAAP,kBACH,QAAC,QAAD;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEH,IAAI,CAACI;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMP,QAAQ,CAACG,IAAI,CAACK,GAAN,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAeF,KAAf;AAAA;AAAA;AAAA;AAAA,cAHH;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAtBD;;GAAMX,a;UACgBP,W,EACHC,W;;;KAFbM,a;AAwBN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { archiveList } from '../../actions/board';\n\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst ArchivedLists = () => {\n  const listObjects = useSelector((state) => state.board.board.listObjects);\n  const dispatch = useDispatch();\n\n  const onSubmit = async (listId) => {\n    dispatch(archiveList(listId, false));\n  };\n\n  return (\n    <div>\n      <List>\n        {listObjects\n          .filter((list) => list.archived)\n          .map((list, index) => (\n            <ListItem key={index}>\n              <ListItemText primary={list.title} />\n              <Button onClick={() => onSubmit(list._id)}>Send to Board</Button>\n            </ListItem>\n          ))}\n      </List>\n    </div>\n  );\n};\n\nexport default ArchivedLists;\n"]},"metadata":{},"sourceType":"module"}