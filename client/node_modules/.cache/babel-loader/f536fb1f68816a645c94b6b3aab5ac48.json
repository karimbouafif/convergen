{"ast":null,"code":"var _jsxFileName = \"E:\\\\Convergen\\\\Convergen\\\\client\\\\src\\\\components\\\\list\\\\CreateCardForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addCard } from '../../actions/board';\nimport { Card, CardContent, TextField, Button } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateCardForm = _ref => {\n  _s();\n\n  let {\n    listId,\n    setAdding\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const dispatch = useDispatch();\n  const formRef = useRef(null);\n  useEffect(() => {\n    formRef && formRef.current && formRef.current.scrollIntoView();\n  }, [title]);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    dispatch(addCard({\n      title,\n      listId\n    }));\n    setTitle('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ref: formRef,\n    className: \"create-card-form\",\n    onSubmit: e => onSubmit(e),\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"card-edit-content\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          fullWidth: true,\n          multiline: true,\n          required: true,\n          label: \"Enter a title for this card\",\n          autoFocus: true,\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && onSubmit(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-actions\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Add Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setAdding(false);\n          setTitle('');\n        },\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateCardForm, \"y0DdtlkEiRnANJsB1vSqL9VRfyo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateCardForm;\nCreateCardForm.propTypes = {\n  listId: PropTypes.string.isRequired,\n  setAdding: PropTypes.func.isRequired\n};\nexport default CreateCardForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCardForm\");","map":{"version":3,"sources":["E:/Convergen/Convergen/client/src/components/list/CreateCardForm.js"],"names":["React","useRef","useState","useEffect","useDispatch","PropTypes","addCard","Card","CardContent","TextField","Button","CloseIcon","CreateCardForm","listId","setAdding","title","setTitle","dispatch","formRef","current","scrollIntoView","onSubmit","e","preventDefault","target","value","key","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addCard } from '../../actions/board';\nimport { Card, CardContent, TextField, Button } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst CreateCardForm = ({ listId, setAdding }) => {\n  const [title, setTitle] = useState('');\n  const dispatch = useDispatch();\n\n  const formRef = useRef(null);\n  useEffect(() => {\n    formRef && formRef.current && formRef.current.scrollIntoView();\n  }, [title]);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    dispatch(addCard({ title, listId }));\n    setTitle('');\n  };\n\n  return (\n    <form ref={formRef} className='create-card-form' onSubmit={(e) => onSubmit(e)}>\n      <Card>\n        <CardContent className='card-edit-content'>\n          <TextField\n            margin='normal'\n            fullWidth\n            multiline\n            required\n            label='Enter a title for this card'\n            autoFocus\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && onSubmit(e)}\n          />\n        </CardContent>\n      </Card>\n      <div className='card-actions'>\n        <Button type='submit' variant='contained' color='primary'>\n          Add Card\n        </Button>\n        <Button\n          onClick={() => {\n            setAdding(false);\n            setTitle('');\n          }}\n        >\n          <CloseIcon />\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nCreateCardForm.propTypes = {\n  listId: PropTypes.string.isRequired,\n  setAdding: PropTypes.func.isRequired,\n};\n\nexport default CreateCardForm;\n"]},"metadata":{},"sourceType":"module"}