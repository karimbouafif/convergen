{"ast":null,"code":"var _jsxFileName = \"E:\\\\Convergen\\\\Convergen\\\\client\\\\src\\\\components\\\\card\\\\DeleteCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteCard } from '../../actions/board';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeleteCard = _ref => {\n  _s();\n\n  let {\n    cardId,\n    setOpen,\n    list\n  } = _ref;\n  const [openDialog, setOpenDialog] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClickOpen = () => {\n    setOpenDialog(true);\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const onDeleteCard = async () => {\n    dispatch(deleteCard(list._id, cardId));\n    setOpenDialog(false);\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: handleClickOpen,\n      children: \"Delete Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: 'Delete card?'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onDeleteCard,\n          variant: \"contained\",\n          color: \"secondary\",\n          autoFocus: true,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeleteCard, \"YKpokl2Y62egEzAZfqdaMg8B6K4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = DeleteCard;\nDeleteCard.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  list: PropTypes.object.isRequired\n};\nexport default DeleteCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteCard\");","map":{"version":3,"sources":["E:/Convergen/Convergen/client/src/components/card/DeleteCard.js"],"names":["React","useState","useDispatch","deleteCard","PropTypes","Button","Dialog","DialogActions","DialogTitle","CloseIcon","DeleteCard","cardId","setOpen","list","openDialog","setOpenDialog","dispatch","handleClickOpen","handleClose","onDeleteCard","_id","propTypes","string","isRequired","func","object"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;;AAEA,MAAMC,UAAU,GAAG,QAA+B;AAAA;;AAAA,MAA9B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,GAA8B;AAChD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,eAAe,GAAG,MAAM;AAC5BF,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACxBH,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,QAAMI,YAAY,GAAG,YAAY;AAC/BH,IAAAA,QAAQ,CAACb,UAAU,CAACU,IAAI,CAACO,GAAN,EAAWT,MAAX,CAAX,CAAR;AACAI,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,WAAlC;AAA8C,MAAA,OAAO,EAAEK,eAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEH,UAAd;AAA0B,MAAA,OAAO,EAAEI,WAAnC;AAAA,8BACE,QAAC,WAAD;AAAA,kBAAc;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEC,YAAjB;AAA+B,UAAA,OAAO,EAAC,WAAvC;AAAmD,UAAA,KAAK,EAAC,WAAzD;AAAqE,UAAA,SAAS,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAED,WAAjB;AAAA,iCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CApCD;;GAAMR,U;UAEaR,W;;;KAFbQ,U;AAsCNA,UAAU,CAACW,SAAX,GAAuB;AACrBV,EAAAA,MAAM,EAAEP,SAAS,CAACkB,MAAV,CAAiBC,UADJ;AAErBX,EAAAA,OAAO,EAAER,SAAS,CAACoB,IAAV,CAAeD,UAFH;AAGrBV,EAAAA,IAAI,EAAET,SAAS,CAACqB,MAAV,CAAiBF;AAHF,CAAvB;AAMA,eAAeb,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteCard } from '../../actions/board';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst DeleteCard = ({ cardId, setOpen, list }) => {\n  const [openDialog, setOpenDialog] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClickOpen = () => {\n    setOpenDialog(true);\n  };\n\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n\n  const onDeleteCard = async () => {\n    dispatch(deleteCard(list._id, cardId));\n    setOpenDialog(false);\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant='contained' color='secondary' onClick={handleClickOpen}>\n        Delete Card\n      </Button>\n      <Dialog open={openDialog} onClose={handleClose}>\n        <DialogTitle>{'Delete card?'}</DialogTitle>\n        <DialogActions>\n          <Button onClick={onDeleteCard} variant='contained' color='secondary' autoFocus>\n            Delete\n          </Button>\n          <Button onClick={handleClose}>\n            <CloseIcon />\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nDeleteCard.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  list: PropTypes.object.isRequired,\n};\n\nexport default DeleteCard;\n"]},"metadata":{},"sourceType":"module"}