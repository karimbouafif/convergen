{"ast":null,"code":"var _jsxFileName = \"E:\\\\Convergen\\\\Convergen\\\\client\\\\src\\\\components\\\\list\\\\MoveList.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { moveList } from '../../actions/board';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport useStyles from '../../utlis/dialogStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MoveList = _ref => {\n  _s();\n\n  let {\n    listId,\n    closeMenu\n  } = _ref;\n  const classes = useStyles();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [position, setPosition] = useState(0);\n  const [positions, setPositions] = useState([0]);\n  const lists = useSelector(state => state.board.board.lists);\n  const listObjects = useSelector(state => state.board.board.listObjects);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const mappedListObjects = listObjects.sort((a, b) => lists.findIndex(id => id === a._id) - lists.findIndex(id => id === b._id)).map((list, index) => ({\n      list,\n      index\n    }));\n    setPositions(mappedListObjects.filter(list => !list.list.archived).map(list => list.index));\n    setPosition(mappedListObjects.findIndex(list => list.list._id === listId));\n  }, [lists, listId, listObjects]);\n\n  const onSubmit = async () => {\n    dispatch(moveList(listId, {\n      toIndex: position\n    }));\n    setOpenDialog(false);\n    closeMenu();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setOpenDialog(true),\n      children: \"Move This List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: () => setOpenDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.moveListTop,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: 'Move List'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenDialog(false),\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        className: classes.moveListBottom,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            shrink: true,\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: position,\n            required: true,\n            onChange: e => setPosition(e.target.value),\n            displayEmpty: true,\n            children: positions.map((position, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: position,\n              children: index + 1\n            }, position, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.moveListButton,\n            onClick: onSubmit,\n            children: \"Move List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MoveList, \"iNx1uNHy8GmLTaw4opuuD0W2mUA=\", false, function () {\n  return [useStyles, useSelector, useSelector, useDispatch];\n});\n\n_c = MoveList;\nMoveList.propTypes = {\n  listId: PropTypes.string.isRequired,\n  closeMenu: PropTypes.func.isRequired\n};\nexport default MoveList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoveList\");","map":{"version":3,"sources":["E:/Convergen/Convergen/client/src/components/list/MoveList.js"],"names":["React","Fragment","useState","useEffect","useSelector","useDispatch","PropTypes","moveList","Button","Dialog","DialogActions","DialogTitle","CloseIcon","InputLabel","MenuItem","FormControl","Select","useStyles","MoveList","listId","closeMenu","classes","openDialog","setOpenDialog","position","setPosition","positions","setPositions","lists","state","board","listObjects","dispatch","mappedListObjects","sort","a","b","findIndex","id","_id","map","list","index","filter","archived","onSubmit","toIndex","moveListTop","moveListBottom","e","target","value","moveListButton","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { moveList } from '../../actions/board';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport useStyles from '../../utlis/dialogStyles';\n\nconst MoveList = ({ listId, closeMenu }) => {\n  const classes = useStyles();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [position, setPosition] = useState(0);\n  const [positions, setPositions] = useState([0]);\n  const lists = useSelector((state) => state.board.board.lists);\n  const listObjects = useSelector((state) => state.board.board.listObjects);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const mappedListObjects = listObjects\n      .sort(\n        (a, b) =>\n          lists.findIndex((id) => id === a._id) - lists.findIndex((id) => id === b._id)\n      )\n      .map((list, index) => ({ list, index }));\n    setPositions(\n      mappedListObjects.filter((list) => !list.list.archived).map((list) => list.index)\n    );\n    setPosition(mappedListObjects.findIndex((list) => list.list._id === listId));\n  }, [lists, listId, listObjects]);\n\n  const onSubmit = async () => {\n    dispatch(moveList(listId, { toIndex: position }));\n    setOpenDialog(false);\n    closeMenu();\n  };\n\n  return (\n    <Fragment>\n      <div onClick={() => setOpenDialog(true)}>Move This List</div>\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\n        <div className={classes.moveListTop}>\n          <DialogTitle>{'Move List'}</DialogTitle>\n          <Button onClick={() => setOpenDialog(false)}>\n            <CloseIcon />\n          </Button>\n        </div>\n        <DialogActions className={classes.moveListBottom}>\n          <FormControl>\n            <InputLabel shrink>Position</InputLabel>\n            <Select\n              value={position}\n              required\n              onChange={(e) => setPosition(e.target.value)}\n              displayEmpty\n            >\n              {positions.map((position, index) => (\n                <MenuItem key={position} value={position}>\n                  {index + 1}\n                </MenuItem>\n              ))}\n            </Select>\n            <Button\n              type='submit'\n              variant='contained'\n              color='primary'\n              className={classes.moveListButton}\n              onClick={onSubmit}\n            >\n              Move List\n            </Button>\n          </FormControl>\n        </DialogActions>\n      </Dialog>\n    </Fragment>\n  );\n};\n\nMoveList.propTypes = {\n  listId: PropTypes.string.isRequired,\n  closeMenu: PropTypes.func.isRequired,\n};\n\nexport default MoveList;\n"]},"metadata":{},"sourceType":"module"}